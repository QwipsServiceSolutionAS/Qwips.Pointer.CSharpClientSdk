// <auto-generated/>
using Microsoft.Kiota.Abstractions;
using Qwips.Core.Pointer.XrmUsers.V1.UserAccounts.WithEmailSetPassword;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Threading.Tasks;
using System;
namespace Qwips.Core.Pointer.XrmUsers.V1.UserAccounts {
    /// <summary>
    /// Builds and executes requests for operations under \xrm-users\v1\userAccounts
    /// </summary>
    public class UserAccountsRequestBuilder : BaseRequestBuilder {
        /// <summary>
        /// Instantiates a new UserAccountsRequestBuilder and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public UserAccountsRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/xrm-users/v1/userAccounts", pathParameters) {
        }
        /// <summary>
        /// Instantiates a new UserAccountsRequestBuilder and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public UserAccountsRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/xrm-users/v1/userAccounts", rawUrl) {
        }
        /// <summary>
        /// Builds and executes requests for operations under \xrm-users\v1\userAccounts\{email}:setPassword
        /// </summary>
        public WithEmailSetPasswordRequestBuilder WithEmailSetPassword(string email) {
            if(string.IsNullOrEmpty(email)) throw new ArgumentNullException(nameof(email));
            return new WithEmailSetPasswordRequestBuilder(PathParameters, RequestAdapter, email);
        }
    }
}
