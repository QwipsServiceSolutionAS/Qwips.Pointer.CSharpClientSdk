// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace Qwips.Core.Pointer.Models {
    public class Body14 : IParsable {
        /// <summary>Gets or Sets Currency</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Currency { get; set; }
#nullable restore
#else
        public string Currency { get; set; }
#endif
        /// <summary>Gets or Sets CustomerContactId</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CustomerContactId { get; set; }
#nullable restore
#else
        public string CustomerContactId { get; set; }
#endif
        /// <summary>Gets or Sets CustomerId</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CustomerId { get; set; }
#nullable restore
#else
        public string CustomerId { get; set; }
#endif
        /// <summary>Gets or Sets DeadlineAt</summary>
        public DateTimeOffset? DeadlineAt { get; set; }
        /// <summary>Gets or Sets EstimatedWorth</summary>
        public double? EstimatedWorth { get; set; }
        /// <summary>Gets or Sets IsArchived</summary>
        public bool? IsArchived { get; set; }
        /// <summary>Gets or Sets IsContractual</summary>
        public bool? IsContractual { get; set; }
        /// <summary>Gets or Sets Name</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>Gets or Sets No</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? No { get; set; }
#nullable restore
#else
        public string No { get; set; }
#endif
        /// <summary>Gets or Sets ParentProjectId</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ParentProjectId { get; set; }
#nullable restore
#else
        public string ParentProjectId { get; set; }
#endif
        /// <summary>Gets or Sets PlannedEndAt</summary>
        public DateTimeOffset? PlannedEndAt { get; set; }
        /// <summary>Gets or Sets PlannedHours</summary>
        public double? PlannedHours { get; set; }
        /// <summary>Gets or Sets PlannedStartAt</summary>
        public DateTimeOffset? PlannedStartAt { get; set; }
        /// <summary>Gets or Sets PricingType</summary>
        public Body14_plus_PricingTypeEnum? PricingType { get; set; }
        /// <summary>Gets or Sets ProjectManagerId</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ProjectManagerId { get; set; }
#nullable restore
#else
        public string ProjectManagerId { get; set; }
#endif
        /// <summary>Gets or Sets ProjectType</summary>
        public Body14_plus_ProjectTypeEnum? ProjectType { get; set; }
        /// <summary>Gets or Sets Rowrels</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<InlineResponse2002Rowrels>? Rowrels { get; set; }
#nullable restore
#else
        public List<InlineResponse2002Rowrels> Rowrels { get; set; }
#endif
        /// <summary>Gets or Sets UnsafeHtmlDescription</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UnsafeHtmlDescription { get; set; }
#nullable restore
#else
        public string UnsafeHtmlDescription { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static Body14 CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new Body14();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        public IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"currency", n => { Currency = n.GetStringValue(); } },
                {"customerContactId", n => { CustomerContactId = n.GetStringValue(); } },
                {"customerId", n => { CustomerId = n.GetStringValue(); } },
                {"deadlineAt", n => { DeadlineAt = n.GetDateTimeOffsetValue(); } },
                {"estimatedWorth", n => { EstimatedWorth = n.GetDoubleValue(); } },
                {"isArchived", n => { IsArchived = n.GetBoolValue(); } },
                {"isContractual", n => { IsContractual = n.GetBoolValue(); } },
                {"name", n => { Name = n.GetStringValue(); } },
                {"no", n => { No = n.GetStringValue(); } },
                {"parentProjectId", n => { ParentProjectId = n.GetStringValue(); } },
                {"plannedEndAt", n => { PlannedEndAt = n.GetDateTimeOffsetValue(); } },
                {"plannedHours", n => { PlannedHours = n.GetDoubleValue(); } },
                {"plannedStartAt", n => { PlannedStartAt = n.GetDateTimeOffsetValue(); } },
                {"pricingType", n => { PricingType = n.GetEnumValue<Body14_plus_PricingTypeEnum>(); } },
                {"projectManagerId", n => { ProjectManagerId = n.GetStringValue(); } },
                {"projectType", n => { ProjectType = n.GetEnumValue<Body14_plus_ProjectTypeEnum>(); } },
                {"rowrels", n => { Rowrels = n.GetCollectionOfObjectValues<InlineResponse2002Rowrels>(InlineResponse2002Rowrels.CreateFromDiscriminatorValue)?.ToList(); } },
                {"unsafeHtmlDescription", n => { UnsafeHtmlDescription = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("currency", Currency);
            writer.WriteStringValue("customerContactId", CustomerContactId);
            writer.WriteStringValue("customerId", CustomerId);
            writer.WriteDateTimeOffsetValue("deadlineAt", DeadlineAt);
            writer.WriteDoubleValue("estimatedWorth", EstimatedWorth);
            writer.WriteBoolValue("isArchived", IsArchived);
            writer.WriteBoolValue("isContractual", IsContractual);
            writer.WriteStringValue("name", Name);
            writer.WriteStringValue("no", No);
            writer.WriteStringValue("parentProjectId", ParentProjectId);
            writer.WriteDateTimeOffsetValue("plannedEndAt", PlannedEndAt);
            writer.WriteDoubleValue("plannedHours", PlannedHours);
            writer.WriteDateTimeOffsetValue("plannedStartAt", PlannedStartAt);
            writer.WriteEnumValue<Body14_plus_PricingTypeEnum>("pricingType", PricingType);
            writer.WriteStringValue("projectManagerId", ProjectManagerId);
            writer.WriteEnumValue<Body14_plus_ProjectTypeEnum>("projectType", ProjectType);
            writer.WriteCollectionOfObjectValues<InlineResponse2002Rowrels>("rowrels", Rowrels);
            writer.WriteStringValue("unsafeHtmlDescription", UnsafeHtmlDescription);
        }
    }
}
