// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace Qwips.Core.Pointer.Models {
    public class Xrmdbexportv1tenantstenantIdentitiesToExcel1Sheets : IParsable {
        /// <summary>Gets or Sets EntityType</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? EntityType { get; set; }
#nullable restore
#else
        public string EntityType { get; set; }
#endif
        /// <summary>Gets or Sets Query</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Xrmdbexportv1tenantstenantIdentitiesToExcel1Sheets_query? Query { get; set; }
#nullable restore
#else
        public Xrmdbexportv1tenantstenantIdentitiesToExcel1Sheets_query Query { get; set; }
#endif
        /// <summary>Gets or Sets SheetColumns</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Xrmdbexportv1tenantstenantIdentitiesToExcel1SheetColumns>? SheetColumns { get; set; }
#nullable restore
#else
        public List<Xrmdbexportv1tenantstenantIdentitiesToExcel1SheetColumns> SheetColumns { get; set; }
#endif
        /// <summary>Gets or Sets SheetLabel</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SheetLabel { get; set; }
#nullable restore
#else
        public string SheetLabel { get; set; }
#endif
        /// <summary>Gets or Sets Timezone</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Timezone { get; set; }
#nullable restore
#else
        public string Timezone { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static Xrmdbexportv1tenantstenantIdentitiesToExcel1Sheets CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new Xrmdbexportv1tenantstenantIdentitiesToExcel1Sheets();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        public IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"entityType", n => { EntityType = n.GetStringValue(); } },
                {"query", n => { Query = n.GetObjectValue<Xrmdbexportv1tenantstenantIdentitiesToExcel1Sheets_query>(Xrmdbexportv1tenantstenantIdentitiesToExcel1Sheets_query.CreateFromDiscriminatorValue); } },
                {"sheetColumns", n => { SheetColumns = n.GetCollectionOfObjectValues<Xrmdbexportv1tenantstenantIdentitiesToExcel1SheetColumns>(Xrmdbexportv1tenantstenantIdentitiesToExcel1SheetColumns.CreateFromDiscriminatorValue)?.ToList(); } },
                {"sheetLabel", n => { SheetLabel = n.GetStringValue(); } },
                {"timezone", n => { Timezone = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("entityType", EntityType);
            writer.WriteObjectValue<Xrmdbexportv1tenantstenantIdentitiesToExcel1Sheets_query>("query", Query);
            writer.WriteCollectionOfObjectValues<Xrmdbexportv1tenantstenantIdentitiesToExcel1SheetColumns>("sheetColumns", SheetColumns);
            writer.WriteStringValue("sheetLabel", SheetLabel);
            writer.WriteStringValue("timezone", Timezone);
        }
    }
}
