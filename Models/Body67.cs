// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace Qwips.Core.Pointer.Models {
    public class Body67 : IParsable {
        /// <summary>Gets or Sets EndValue</summary>
        public int? EndValue { get; set; }
        /// <summary>The _hashes property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public InlineResponse2004Hashes? Hashes { get; set; }
#nullable restore
#else
        public InlineResponse2004Hashes Hashes { get; set; }
#endif
        /// <summary>Gets or Sets IncValue</summary>
        public int? IncValue { get; set; }
        /// <summary>Gets or Sets IsArchived</summary>
        public bool? IsArchived { get; set; }
        /// <summary>Gets or Sets MaxValue</summary>
        public int? MaxValue { get; set; }
        /// <summary>Gets or Sets MinValue</summary>
        public int? MinValue { get; set; }
        /// <summary>Gets or Sets Name</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>Gets or Sets NextValue</summary>
        public int? NextValue { get; set; }
        /// <summary>Gets or Sets No</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? No { get; set; }
#nullable restore
#else
        public string No { get; set; }
#endif
        /// <summary>Gets or Sets Prefix</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Prefix { get; set; }
#nullable restore
#else
        public string Prefix { get; set; }
#endif
        /// <summary>Gets or Sets SeqNoDisable</summary>
        public bool? SeqNoDisable { get; set; }
        /// <summary>Gets or Sets SeqNoDisableTnx</summary>
        public bool? SeqNoDisableTnx { get; set; }
        /// <summary>Gets or Sets SlugifyEnabled</summary>
        public bool? SlugifyEnabled { get; set; }
        /// <summary>Gets or Sets SlugifyPropId</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SlugifyPropId { get; set; }
#nullable restore
#else
        public string SlugifyPropId { get; set; }
#endif
        /// <summary>Gets or Sets SlugifyRescueMax</summary>
        public int? SlugifyRescueMax { get; set; }
        /// <summary>Gets or Sets StartValue</summary>
        public int? StartValue { get; set; }
        /// <summary>Gets or Sets Suffix</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Suffix { get; set; }
#nullable restore
#else
        public string Suffix { get; set; }
#endif
        /// <summary>Gets or Sets UniqueGroup</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UniqueGroup { get; set; }
#nullable restore
#else
        public string UniqueGroup { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static Body67 CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new Body67();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        public IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"endValue", n => { EndValue = n.GetIntValue(); } },
                {"_hashes", n => { Hashes = n.GetObjectValue<InlineResponse2004Hashes>(InlineResponse2004Hashes.CreateFromDiscriminatorValue); } },
                {"incValue", n => { IncValue = n.GetIntValue(); } },
                {"isArchived", n => { IsArchived = n.GetBoolValue(); } },
                {"maxValue", n => { MaxValue = n.GetIntValue(); } },
                {"minValue", n => { MinValue = n.GetIntValue(); } },
                {"name", n => { Name = n.GetStringValue(); } },
                {"nextValue", n => { NextValue = n.GetIntValue(); } },
                {"no", n => { No = n.GetStringValue(); } },
                {"prefix", n => { Prefix = n.GetStringValue(); } },
                {"seqNoDisable", n => { SeqNoDisable = n.GetBoolValue(); } },
                {"seqNoDisableTnx", n => { SeqNoDisableTnx = n.GetBoolValue(); } },
                {"slugifyEnabled", n => { SlugifyEnabled = n.GetBoolValue(); } },
                {"slugifyPropId", n => { SlugifyPropId = n.GetStringValue(); } },
                {"slugifyRescueMax", n => { SlugifyRescueMax = n.GetIntValue(); } },
                {"startValue", n => { StartValue = n.GetIntValue(); } },
                {"suffix", n => { Suffix = n.GetStringValue(); } },
                {"uniqueGroup", n => { UniqueGroup = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteIntValue("endValue", EndValue);
            writer.WriteObjectValue<InlineResponse2004Hashes>("_hashes", Hashes);
            writer.WriteIntValue("incValue", IncValue);
            writer.WriteBoolValue("isArchived", IsArchived);
            writer.WriteIntValue("maxValue", MaxValue);
            writer.WriteIntValue("minValue", MinValue);
            writer.WriteStringValue("name", Name);
            writer.WriteIntValue("nextValue", NextValue);
            writer.WriteStringValue("no", No);
            writer.WriteStringValue("prefix", Prefix);
            writer.WriteBoolValue("seqNoDisable", SeqNoDisable);
            writer.WriteBoolValue("seqNoDisableTnx", SeqNoDisableTnx);
            writer.WriteBoolValue("slugifyEnabled", SlugifyEnabled);
            writer.WriteStringValue("slugifyPropId", SlugifyPropId);
            writer.WriteIntValue("slugifyRescueMax", SlugifyRescueMax);
            writer.WriteIntValue("startValue", StartValue);
            writer.WriteStringValue("suffix", Suffix);
            writer.WriteStringValue("uniqueGroup", UniqueGroup);
        }
    }
}
