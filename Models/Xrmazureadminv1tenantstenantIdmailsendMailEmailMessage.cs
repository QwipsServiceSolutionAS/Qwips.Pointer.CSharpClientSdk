// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace Qwips.Core.Pointer.Models {
    public class Xrmazureadminv1tenantstenantIdmailsendMailEmailMessage : IParsable {
        /// <summary>Gets or Sets Attachments</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Xrmazureadminv1tenantstenantIdmailsendMailEmailMessageAttachments>? Attachments { get; set; }
#nullable restore
#else
        public List<Xrmazureadminv1tenantstenantIdmailsendMailEmailMessageAttachments> Attachments { get; set; }
#endif
        /// <summary>Gets or Sets Bcc</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Xrmazureadminv1tenantstenantIdmailsendMailEmailMessageTo>? Bcc { get; set; }
#nullable restore
#else
        public List<Xrmazureadminv1tenantstenantIdmailsendMailEmailMessageTo> Bcc { get; set; }
#endif
        /// <summary>Gets or Sets Cc</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Xrmazureadminv1tenantstenantIdmailsendMailEmailMessageTo>? Cc { get; set; }
#nullable restore
#else
        public List<Xrmazureadminv1tenantstenantIdmailsendMailEmailMessageTo> Cc { get; set; }
#endif
        /// <summary>Gets or Sets Headers</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Xrmazureadminv1tenantstenantIdmailsendMailEmailMessageHeaders>? Headers { get; set; }
#nullable restore
#else
        public List<Xrmazureadminv1tenantstenantIdmailsendMailEmailMessageHeaders> Headers { get; set; }
#endif
        /// <summary>The htmlBody property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Xrmazureadminv1tenantstenantIdmailsendMailEmailMessageHtmlBody? HtmlBody { get; set; }
#nullable restore
#else
        public Xrmazureadminv1tenantstenantIdmailsendMailEmailMessageHtmlBody HtmlBody { get; set; }
#endif
        /// <summary>Gets or Sets SendFromUpn</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SendFromUpn { get; set; }
#nullable restore
#else
        public string SendFromUpn { get; set; }
#endif
        /// <summary>Gets or Sets Subject</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Subject { get; set; }
#nullable restore
#else
        public string Subject { get; set; }
#endif
        /// <summary>Gets or Sets To</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Xrmazureadminv1tenantstenantIdmailsendMailEmailMessageTo>? To { get; set; }
#nullable restore
#else
        public List<Xrmazureadminv1tenantstenantIdmailsendMailEmailMessageTo> To { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static Xrmazureadminv1tenantstenantIdmailsendMailEmailMessage CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new Xrmazureadminv1tenantstenantIdmailsendMailEmailMessage();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        public IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"attachments", n => { Attachments = n.GetCollectionOfObjectValues<Xrmazureadminv1tenantstenantIdmailsendMailEmailMessageAttachments>(Xrmazureadminv1tenantstenantIdmailsendMailEmailMessageAttachments.CreateFromDiscriminatorValue)?.ToList(); } },
                {"bcc", n => { Bcc = n.GetCollectionOfObjectValues<Xrmazureadminv1tenantstenantIdmailsendMailEmailMessageTo>(Xrmazureadminv1tenantstenantIdmailsendMailEmailMessageTo.CreateFromDiscriminatorValue)?.ToList(); } },
                {"cc", n => { Cc = n.GetCollectionOfObjectValues<Xrmazureadminv1tenantstenantIdmailsendMailEmailMessageTo>(Xrmazureadminv1tenantstenantIdmailsendMailEmailMessageTo.CreateFromDiscriminatorValue)?.ToList(); } },
                {"headers", n => { Headers = n.GetCollectionOfObjectValues<Xrmazureadminv1tenantstenantIdmailsendMailEmailMessageHeaders>(Xrmazureadminv1tenantstenantIdmailsendMailEmailMessageHeaders.CreateFromDiscriminatorValue)?.ToList(); } },
                {"htmlBody", n => { HtmlBody = n.GetObjectValue<Xrmazureadminv1tenantstenantIdmailsendMailEmailMessageHtmlBody>(Xrmazureadminv1tenantstenantIdmailsendMailEmailMessageHtmlBody.CreateFromDiscriminatorValue); } },
                {"sendFromUpn", n => { SendFromUpn = n.GetStringValue(); } },
                {"subject", n => { Subject = n.GetStringValue(); } },
                {"to", n => { To = n.GetCollectionOfObjectValues<Xrmazureadminv1tenantstenantIdmailsendMailEmailMessageTo>(Xrmazureadminv1tenantstenantIdmailsendMailEmailMessageTo.CreateFromDiscriminatorValue)?.ToList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfObjectValues<Xrmazureadminv1tenantstenantIdmailsendMailEmailMessageAttachments>("attachments", Attachments);
            writer.WriteCollectionOfObjectValues<Xrmazureadminv1tenantstenantIdmailsendMailEmailMessageTo>("bcc", Bcc);
            writer.WriteCollectionOfObjectValues<Xrmazureadminv1tenantstenantIdmailsendMailEmailMessageTo>("cc", Cc);
            writer.WriteCollectionOfObjectValues<Xrmazureadminv1tenantstenantIdmailsendMailEmailMessageHeaders>("headers", Headers);
            writer.WriteObjectValue<Xrmazureadminv1tenantstenantIdmailsendMailEmailMessageHtmlBody>("htmlBody", HtmlBody);
            writer.WriteStringValue("sendFromUpn", SendFromUpn);
            writer.WriteStringValue("subject", Subject);
            writer.WriteCollectionOfObjectValues<Xrmazureadminv1tenantstenantIdmailsendMailEmailMessageTo>("to", To);
        }
    }
}
