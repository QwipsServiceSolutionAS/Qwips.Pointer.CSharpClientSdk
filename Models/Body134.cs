// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace Qwips.Core.Pointer.Models {
    public class Body134 : IParsable {
        /// <summary>Gets or Sets Decision</summary>
        public Body134_plus_DecisionEnum? Decision { get; set; }
        /// <summary>Gets or Sets SignedAt</summary>
        public DateTimeOffset? SignedAt { get; set; }
        /// <summary>Gets or Sets SignedEmail</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SignedEmail { get; set; }
#nullable restore
#else
        public string SignedEmail { get; set; }
#endif
        /// <summary>Gets or Sets SignedName</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SignedName { get; set; }
#nullable restore
#else
        public string SignedName { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static Body134 CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new Body134();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        public IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"decision", n => { Decision = n.GetEnumValue<Body134_plus_DecisionEnum>(); } },
                {"signedAt", n => { SignedAt = n.GetDateTimeOffsetValue(); } },
                {"signedEmail", n => { SignedEmail = n.GetStringValue(); } },
                {"signedName", n => { SignedName = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteEnumValue<Body134_plus_DecisionEnum>("decision", Decision);
            writer.WriteDateTimeOffsetValue("signedAt", SignedAt);
            writer.WriteStringValue("signedEmail", SignedEmail);
            writer.WriteStringValue("signedName", SignedName);
        }
    }
}
