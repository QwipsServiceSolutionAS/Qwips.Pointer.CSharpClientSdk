// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace Qwips.Core.Pointer.Models {
    public class Body20 : IParsable {
        /// <summary>Gets or Sets Currency</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Currency { get; set; }
#nullable restore
#else
        public string Currency { get; set; }
#endif
        /// <summary>Gets or Sets CustomerContactId</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CustomerContactId { get; set; }
#nullable restore
#else
        public string CustomerContactId { get; set; }
#endif
        /// <summary>Gets or Sets CustomerId</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CustomerId { get; set; }
#nullable restore
#else
        public string CustomerId { get; set; }
#endif
        /// <summary>The deliveryAddress property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Xrmdbv1beta1tenantstenantIdemployeesMainAddress? DeliveryAddress { get; set; }
#nullable restore
#else
        public Xrmdbv1beta1tenantstenantIdemployeesMainAddress DeliveryAddress { get; set; }
#endif
        /// <summary>Gets or Sets DeliveryPlannedAt</summary>
        public DateTimeOffset? DeliveryPlannedAt { get; set; }
        /// <summary>Gets or Sets ExpiresAt</summary>
        public DateTimeOffset? ExpiresAt { get; set; }
        /// <summary>The invoiceAddress property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Xrmdbv1beta1tenantstenantIdemployeesMainAddress? InvoiceAddress { get; set; }
#nullable restore
#else
        public Xrmdbv1beta1tenantstenantIdemployeesMainAddress InvoiceAddress { get; set; }
#endif
        /// <summary>Gets or Sets InvoiceComment</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? InvoiceComment { get; set; }
#nullable restore
#else
        public string InvoiceComment { get; set; }
#endif
        /// <summary>Gets or Sets InvoiceCustomerReference</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? InvoiceCustomerReference { get; set; }
#nullable restore
#else
        public string InvoiceCustomerReference { get; set; }
#endif
        /// <summary>Gets or Sets InvoiceEmail</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? InvoiceEmail { get; set; }
#nullable restore
#else
        public string InvoiceEmail { get; set; }
#endif
        /// <summary>Gets or Sets InvoiceOurReference</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? InvoiceOurReference { get; set; }
#nullable restore
#else
        public string InvoiceOurReference { get; set; }
#endif
        /// <summary>Gets or Sets IsArchived</summary>
        public bool? IsArchived { get; set; }
        /// <summary>Gets or Sets Name</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>Gets or Sets No</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? No { get; set; }
#nullable restore
#else
        public string No { get; set; }
#endif
        /// <summary>Gets or Sets OrderLines</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<InlineResponse20016OrderLines>? OrderLines { get; set; }
#nullable restore
#else
        public List<InlineResponse20016OrderLines> OrderLines { get; set; }
#endif
        /// <summary>Gets or Sets OrderLinesLogicalGroups</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? OrderLinesLogicalGroups { get; set; }
#nullable restore
#else
        public List<string> OrderLinesLogicalGroups { get; set; }
#endif
        /// <summary>Gets or Sets OrderLinesReadOnly</summary>
        public bool? OrderLinesReadOnly { get; set; }
        /// <summary>Gets or Sets OurContactId</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OurContactId { get; set; }
#nullable restore
#else
        public string OurContactId { get; set; }
#endif
        /// <summary>Gets or Sets PersistedPdfGenOptions</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Body20_persistedPdfGenOptions? PersistedPdfGenOptions { get; set; }
#nullable restore
#else
        public Body20_persistedPdfGenOptions PersistedPdfGenOptions { get; set; }
#endif
        /// <summary>Gets or Sets ProjectId</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ProjectId { get; set; }
#nullable restore
#else
        public string ProjectId { get; set; }
#endif
        /// <summary>Gets or Sets QuoteEmailSentAt</summary>
        public DateTimeOffset? QuoteEmailSentAt { get; set; }
        /// <summary>Gets or Sets QuoteStatus</summary>
        public Body20_plus_QuoteStatusEnum? QuoteStatus { get; set; }
        /// <summary>Gets or Sets Rowrels</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<InlineResponse2002Rowrels>? Rowrels { get; set; }
#nullable restore
#else
        public List<InlineResponse2002Rowrels> Rowrels { get; set; }
#endif
        /// <summary>Gets or Sets SalesOptyId</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SalesOptyId { get; set; }
#nullable restore
#else
        public string SalesOptyId { get; set; }
#endif
        /// <summary>Gets or Sets SalesOrderCategoryId</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SalesOrderCategoryId { get; set; }
#nullable restore
#else
        public string SalesOrderCategoryId { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static Body20 CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new Body20();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        public IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"currency", n => { Currency = n.GetStringValue(); } },
                {"customerContactId", n => { CustomerContactId = n.GetStringValue(); } },
                {"customerId", n => { CustomerId = n.GetStringValue(); } },
                {"deliveryAddress", n => { DeliveryAddress = n.GetObjectValue<Xrmdbv1beta1tenantstenantIdemployeesMainAddress>(Xrmdbv1beta1tenantstenantIdemployeesMainAddress.CreateFromDiscriminatorValue); } },
                {"deliveryPlannedAt", n => { DeliveryPlannedAt = n.GetDateTimeOffsetValue(); } },
                {"expiresAt", n => { ExpiresAt = n.GetDateTimeOffsetValue(); } },
                {"invoiceAddress", n => { InvoiceAddress = n.GetObjectValue<Xrmdbv1beta1tenantstenantIdemployeesMainAddress>(Xrmdbv1beta1tenantstenantIdemployeesMainAddress.CreateFromDiscriminatorValue); } },
                {"invoiceComment", n => { InvoiceComment = n.GetStringValue(); } },
                {"invoiceCustomerReference", n => { InvoiceCustomerReference = n.GetStringValue(); } },
                {"invoiceEmail", n => { InvoiceEmail = n.GetStringValue(); } },
                {"invoiceOurReference", n => { InvoiceOurReference = n.GetStringValue(); } },
                {"isArchived", n => { IsArchived = n.GetBoolValue(); } },
                {"name", n => { Name = n.GetStringValue(); } },
                {"no", n => { No = n.GetStringValue(); } },
                {"orderLines", n => { OrderLines = n.GetCollectionOfObjectValues<InlineResponse20016OrderLines>(InlineResponse20016OrderLines.CreateFromDiscriminatorValue)?.ToList(); } },
                {"orderLinesLogicalGroups", n => { OrderLinesLogicalGroups = n.GetCollectionOfPrimitiveValues<string>()?.ToList(); } },
                {"orderLinesReadOnly", n => { OrderLinesReadOnly = n.GetBoolValue(); } },
                {"ourContactId", n => { OurContactId = n.GetStringValue(); } },
                {"persistedPdfGenOptions", n => { PersistedPdfGenOptions = n.GetObjectValue<Body20_persistedPdfGenOptions>(Body20_persistedPdfGenOptions.CreateFromDiscriminatorValue); } },
                {"projectId", n => { ProjectId = n.GetStringValue(); } },
                {"quoteEmailSentAt", n => { QuoteEmailSentAt = n.GetDateTimeOffsetValue(); } },
                {"quoteStatus", n => { QuoteStatus = n.GetEnumValue<Body20_plus_QuoteStatusEnum>(); } },
                {"rowrels", n => { Rowrels = n.GetCollectionOfObjectValues<InlineResponse2002Rowrels>(InlineResponse2002Rowrels.CreateFromDiscriminatorValue)?.ToList(); } },
                {"salesOptyId", n => { SalesOptyId = n.GetStringValue(); } },
                {"salesOrderCategoryId", n => { SalesOrderCategoryId = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("currency", Currency);
            writer.WriteStringValue("customerContactId", CustomerContactId);
            writer.WriteStringValue("customerId", CustomerId);
            writer.WriteObjectValue<Xrmdbv1beta1tenantstenantIdemployeesMainAddress>("deliveryAddress", DeliveryAddress);
            writer.WriteDateTimeOffsetValue("deliveryPlannedAt", DeliveryPlannedAt);
            writer.WriteDateTimeOffsetValue("expiresAt", ExpiresAt);
            writer.WriteObjectValue<Xrmdbv1beta1tenantstenantIdemployeesMainAddress>("invoiceAddress", InvoiceAddress);
            writer.WriteStringValue("invoiceComment", InvoiceComment);
            writer.WriteStringValue("invoiceCustomerReference", InvoiceCustomerReference);
            writer.WriteStringValue("invoiceEmail", InvoiceEmail);
            writer.WriteStringValue("invoiceOurReference", InvoiceOurReference);
            writer.WriteBoolValue("isArchived", IsArchived);
            writer.WriteStringValue("name", Name);
            writer.WriteStringValue("no", No);
            writer.WriteCollectionOfObjectValues<InlineResponse20016OrderLines>("orderLines", OrderLines);
            writer.WriteCollectionOfPrimitiveValues<string>("orderLinesLogicalGroups", OrderLinesLogicalGroups);
            writer.WriteBoolValue("orderLinesReadOnly", OrderLinesReadOnly);
            writer.WriteStringValue("ourContactId", OurContactId);
            writer.WriteObjectValue<Body20_persistedPdfGenOptions>("persistedPdfGenOptions", PersistedPdfGenOptions);
            writer.WriteStringValue("projectId", ProjectId);
            writer.WriteDateTimeOffsetValue("quoteEmailSentAt", QuoteEmailSentAt);
            writer.WriteEnumValue<Body20_plus_QuoteStatusEnum>("quoteStatus", QuoteStatus);
            writer.WriteCollectionOfObjectValues<InlineResponse2002Rowrels>("rowrels", Rowrels);
            writer.WriteStringValue("salesOptyId", SalesOptyId);
            writer.WriteStringValue("salesOrderCategoryId", SalesOrderCategoryId);
        }
    }
}
