// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace Qwips.Core.Pointer.Models {
    public class InlineResponse200 : IParsable {
        /// <summary>Gets or Sets FirebaseConfigs</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<InlineResponse200FirebaseConfigs>? FirebaseConfigs { get; set; }
#nullable restore
#else
        public List<InlineResponse200FirebaseConfigs> FirebaseConfigs { get; set; }
#endif
        /// <summary>location.reload() if this value is grater than the previous one</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ForceRefreshVersion { get; set; }
#nullable restore
#else
        public string ForceRefreshVersion { get; set; }
#endif
        /// <summary>Gets or Sets LoginProviders</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<InlineResponse200LoginProviders>? LoginProviders { get; set; }
#nullable restore
#else
        public List<InlineResponse200LoginProviders> LoginProviders { get; set; }
#endif
        /// <summary>Gets or Sets PrimaryTenantId</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PrimaryTenantId { get; set; }
#nullable restore
#else
        public string PrimaryTenantId { get; set; }
#endif
        /// <summary>The primaryTenantMeta property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public InlineResponse200PrimaryTenantMeta? PrimaryTenantMeta { get; set; }
#nullable restore
#else
        public InlineResponse200PrimaryTenantMeta PrimaryTenantMeta { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static InlineResponse200 CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new InlineResponse200();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        public IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"firebaseConfigs", n => { FirebaseConfigs = n.GetCollectionOfObjectValues<InlineResponse200FirebaseConfigs>(InlineResponse200FirebaseConfigs.CreateFromDiscriminatorValue)?.ToList(); } },
                {"forceRefreshVersion", n => { ForceRefreshVersion = n.GetStringValue(); } },
                {"loginProviders", n => { LoginProviders = n.GetCollectionOfObjectValues<InlineResponse200LoginProviders>(InlineResponse200LoginProviders.CreateFromDiscriminatorValue)?.ToList(); } },
                {"primaryTenantId", n => { PrimaryTenantId = n.GetStringValue(); } },
                {"primaryTenantMeta", n => { PrimaryTenantMeta = n.GetObjectValue<InlineResponse200PrimaryTenantMeta>(InlineResponse200PrimaryTenantMeta.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfObjectValues<InlineResponse200FirebaseConfigs>("firebaseConfigs", FirebaseConfigs);
            writer.WriteStringValue("forceRefreshVersion", ForceRefreshVersion);
            writer.WriteCollectionOfObjectValues<InlineResponse200LoginProviders>("loginProviders", LoginProviders);
            writer.WriteStringValue("primaryTenantId", PrimaryTenantId);
            writer.WriteObjectValue<InlineResponse200PrimaryTenantMeta>("primaryTenantMeta", PrimaryTenantMeta);
        }
    }
}
