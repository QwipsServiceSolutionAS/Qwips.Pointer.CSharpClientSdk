// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace Qwips.Core.Pointer.Models {
    public class InlineResponse2002AggsString : IParsable {
        /// <summary>Gets or Sets AggFormat</summary>
        public InlineResponse2002AggsString_plus_AggFormatEnum? AggFormat { get; set; }
        /// <summary>Gets or Sets AggType</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AggType { get; set; }
#nullable restore
#else
        public string AggType { get; set; }
#endif
        /// <summary>The basic1 property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public InlineResponse2002AggsStringBasic1? Basic1 { get; set; }
#nullable restore
#else
        public InlineResponse2002AggsStringBasic1 Basic1 { get; set; }
#endif
        /// <summary>The chartjs1 property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public InlineResponse2002AggsStringChartjs1? Chartjs1 { get; set; }
#nullable restore
#else
        public InlineResponse2002AggsStringChartjs1 Chartjs1 { get; set; }
#endif
        /// <summary>The chartjs3 property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public InlineResponse2002AggsStringChartjs3? Chartjs3 { get; set; }
#nullable restore
#else
        public InlineResponse2002AggsStringChartjs3 Chartjs3 { get; set; }
#endif
        /// <summary>Gets or Sets Todo9</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public InlineResponse2002AggsString_todo9? Todo9 { get; set; }
#nullable restore
#else
        public InlineResponse2002AggsString_todo9 Todo9 { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static InlineResponse2002AggsString CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new InlineResponse2002AggsString();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        public IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"aggFormat", n => { AggFormat = n.GetEnumValue<InlineResponse2002AggsString_plus_AggFormatEnum>(); } },
                {"aggType", n => { AggType = n.GetStringValue(); } },
                {"basic1", n => { Basic1 = n.GetObjectValue<InlineResponse2002AggsStringBasic1>(InlineResponse2002AggsStringBasic1.CreateFromDiscriminatorValue); } },
                {"chartjs1", n => { Chartjs1 = n.GetObjectValue<InlineResponse2002AggsStringChartjs1>(InlineResponse2002AggsStringChartjs1.CreateFromDiscriminatorValue); } },
                {"chartjs3", n => { Chartjs3 = n.GetObjectValue<InlineResponse2002AggsStringChartjs3>(InlineResponse2002AggsStringChartjs3.CreateFromDiscriminatorValue); } },
                {"todo9", n => { Todo9 = n.GetObjectValue<InlineResponse2002AggsString_todo9>(InlineResponse2002AggsString_todo9.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteEnumValue<InlineResponse2002AggsString_plus_AggFormatEnum>("aggFormat", AggFormat);
            writer.WriteStringValue("aggType", AggType);
            writer.WriteObjectValue<InlineResponse2002AggsStringBasic1>("basic1", Basic1);
            writer.WriteObjectValue<InlineResponse2002AggsStringChartjs1>("chartjs1", Chartjs1);
            writer.WriteObjectValue<InlineResponse2002AggsStringChartjs3>("chartjs3", Chartjs3);
            writer.WriteObjectValue<InlineResponse2002AggsString_todo9>("todo9", Todo9);
        }
    }
}
