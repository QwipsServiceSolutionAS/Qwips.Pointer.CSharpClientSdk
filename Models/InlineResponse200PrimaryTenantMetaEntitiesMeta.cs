// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace Qwips.Core.Pointer.Models {
    public class InlineResponse200PrimaryTenantMetaEntitiesMeta : IParsable {
        /// <summary>Gets or Sets ApiId</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ApiId { get; set; }
#nullable restore
#else
        public string ApiId { get; set; }
#endif
        /// <summary>Gets or Sets ApiKind</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ApiKind { get; set; }
#nullable restore
#else
        public string ApiKind { get; set; }
#endif
        /// <summary>Gets or Sets CreateNewDialogWidgetId</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CreateNewDialogWidgetId { get; set; }
#nullable restore
#else
        public string CreateNewDialogWidgetId { get; set; }
#endif
        /// <summary>Gets or Sets Icon</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Icon { get; set; }
#nullable restore
#else
        public string Icon { get; set; }
#endif
        /// <summary>Gets or Sets Id</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>Gets or Sets ModelId</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ModelId { get; set; }
#nullable restore
#else
        public string ModelId { get; set; }
#endif
        /// <summary>Gets or Sets Name</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>Gets or Sets Properties</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<InlineResponse200PrimaryTenantMetaProperties>? Properties { get; set; }
#nullable restore
#else
        public List<InlineResponse200PrimaryTenantMetaProperties> Properties { get; set; }
#endif
        /// <summary>Gets or Sets UiViews</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<InlineResponse200PrimaryTenantMetaEntitiesMeta_uiViews>? UiViews { get; set; }
#nullable restore
#else
        public List<InlineResponse200PrimaryTenantMetaEntitiesMeta_uiViews> UiViews { get; set; }
#endif
        /// <summary>Gets or Sets UiWidgets</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<InlineResponse200PrimaryTenantMetaEntitiesMeta_uiWidgets>? UiWidgets { get; set; }
#nullable restore
#else
        public List<InlineResponse200PrimaryTenantMetaEntitiesMeta_uiWidgets> UiWidgets { get; set; }
#endif
        /// <summary>Gets or Sets ViewRowDialogWidgetId</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ViewRowDialogWidgetId { get; set; }
#nullable restore
#else
        public string ViewRowDialogWidgetId { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static InlineResponse200PrimaryTenantMetaEntitiesMeta CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new InlineResponse200PrimaryTenantMetaEntitiesMeta();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        public IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"apiId", n => { ApiId = n.GetStringValue(); } },
                {"apiKind", n => { ApiKind = n.GetStringValue(); } },
                {"createNewDialogWidgetId", n => { CreateNewDialogWidgetId = n.GetStringValue(); } },
                {"icon", n => { Icon = n.GetStringValue(); } },
                {"id", n => { Id = n.GetStringValue(); } },
                {"modelId", n => { ModelId = n.GetStringValue(); } },
                {"name", n => { Name = n.GetStringValue(); } },
                {"properties", n => { Properties = n.GetCollectionOfObjectValues<InlineResponse200PrimaryTenantMetaProperties>(InlineResponse200PrimaryTenantMetaProperties.CreateFromDiscriminatorValue)?.ToList(); } },
                {"uiViews", n => { UiViews = n.GetCollectionOfObjectValues<InlineResponse200PrimaryTenantMetaEntitiesMeta_uiViews>(InlineResponse200PrimaryTenantMetaEntitiesMeta_uiViews.CreateFromDiscriminatorValue)?.ToList(); } },
                {"uiWidgets", n => { UiWidgets = n.GetCollectionOfObjectValues<InlineResponse200PrimaryTenantMetaEntitiesMeta_uiWidgets>(InlineResponse200PrimaryTenantMetaEntitiesMeta_uiWidgets.CreateFromDiscriminatorValue)?.ToList(); } },
                {"viewRowDialogWidgetId", n => { ViewRowDialogWidgetId = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("apiId", ApiId);
            writer.WriteStringValue("apiKind", ApiKind);
            writer.WriteStringValue("createNewDialogWidgetId", CreateNewDialogWidgetId);
            writer.WriteStringValue("icon", Icon);
            writer.WriteStringValue("id", Id);
            writer.WriteStringValue("modelId", ModelId);
            writer.WriteStringValue("name", Name);
            writer.WriteCollectionOfObjectValues<InlineResponse200PrimaryTenantMetaProperties>("properties", Properties);
            writer.WriteCollectionOfObjectValues<InlineResponse200PrimaryTenantMetaEntitiesMeta_uiViews>("uiViews", UiViews);
            writer.WriteCollectionOfObjectValues<InlineResponse200PrimaryTenantMetaEntitiesMeta_uiWidgets>("uiWidgets", UiWidgets);
            writer.WriteStringValue("viewRowDialogWidgetId", ViewRowDialogWidgetId);
        }
    }
}
