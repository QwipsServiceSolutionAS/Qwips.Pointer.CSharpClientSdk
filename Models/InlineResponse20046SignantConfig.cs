// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace Qwips.Core.Pointer.Models {
    public class InlineResponse20046SignantConfig : IParsable {
        /// <summary>Gets or Sets AccessCode</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AccessCode { get; set; }
#nullable restore
#else
        public string AccessCode { get; set; }
#endif
        /// <summary>Gets or Sets AccessCodeEncrypted</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public InlineResponse20046SignantConfig_accessCodeEncrypted? AccessCodeEncrypted { get; set; }
#nullable restore
#else
        public InlineResponse20046SignantConfig_accessCodeEncrypted AccessCodeEncrypted { get; set; }
#endif
        /// <summary>Gets or Sets DistributorId</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DistributorId { get; set; }
#nullable restore
#else
        public string DistributorId { get; set; }
#endif
        /// <summary>Gets or Sets EndpointEnv</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? EndpointEnv { get; set; }
#nullable restore
#else
        public string EndpointEnv { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static InlineResponse20046SignantConfig CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new InlineResponse20046SignantConfig();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        public IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"accessCode", n => { AccessCode = n.GetStringValue(); } },
                {"accessCodeEncrypted", n => { AccessCodeEncrypted = n.GetObjectValue<InlineResponse20046SignantConfig_accessCodeEncrypted>(InlineResponse20046SignantConfig_accessCodeEncrypted.CreateFromDiscriminatorValue); } },
                {"distributorId", n => { DistributorId = n.GetStringValue(); } },
                {"endpointEnv", n => { EndpointEnv = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("accessCode", AccessCode);
            writer.WriteObjectValue<InlineResponse20046SignantConfig_accessCodeEncrypted>("accessCodeEncrypted", AccessCodeEncrypted);
            writer.WriteStringValue("distributorId", DistributorId);
            writer.WriteStringValue("endpointEnv", EndpointEnv);
        }
    }
}
