// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace Qwips.Core.Pointer.Models {
    public class Body24 : IParsable {
        /// <summary>Gets or Sets ExpiresAt</summary>
        public DateTimeOffset? ExpiresAt { get; set; }
        /// <summary>Gets or Sets IsArchived</summary>
        public bool? IsArchived { get; set; }
        /// <summary>Gets or Sets Name</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>Gets or Sets No</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? No { get; set; }
#nullable restore
#else
        public string No { get; set; }
#endif
        /// <summary>Gets or Sets Rowrels</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<InlineResponse2002Rowrels>? Rowrels { get; set; }
#nullable restore
#else
        public List<InlineResponse2002Rowrels> Rowrels { get; set; }
#endif
        /// <summary>Gets or Sets SignantEndpoint</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SignantEndpoint { get; set; }
#nullable restore
#else
        public string SignantEndpoint { get; set; }
#endif
        /// <summary>Gets or Sets SignantPostingAutoCreate</summary>
        public bool? SignantPostingAutoCreate { get; set; }
        /// <summary>Gets or Sets SignantPostingId</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SignantPostingId { get; set; }
#nullable restore
#else
        public string SignantPostingId { get; set; }
#endif
        /// <summary>Gets or Sets SignantResponseDump</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Body24_signantResponseDump? SignantResponseDump { get; set; }
#nullable restore
#else
        public Body24_signantResponseDump SignantResponseDump { get; set; }
#endif
        /// <summary>Gets or Sets SignDocAttachments</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<InlineResponse20031SignDocAttachments>? SignDocAttachments { get; set; }
#nullable restore
#else
        public List<InlineResponse20031SignDocAttachments> SignDocAttachments { get; set; }
#endif
        /// <summary>Gets or Sets SignDocDescription</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SignDocDescription { get; set; }
#nullable restore
#else
        public string SignDocDescription { get; set; }
#endif
        /// <summary>Gets or Sets SignDocRecipients</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<InlineResponse20031SignDocRecipients>? SignDocRecipients { get; set; }
#nullable restore
#else
        public List<InlineResponse20031SignDocRecipients> SignDocRecipients { get; set; }
#endif
        /// <summary>Gets or Sets SignDocTitle</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SignDocTitle { get; set; }
#nullable restore
#else
        public string SignDocTitle { get; set; }
#endif
        /// <summary>Gets or Sets SignedAt</summary>
        public DateTimeOffset? SignedAt { get; set; }
        /// <summary>Gets or Sets SignedByEmail</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SignedByEmail { get; set; }
#nullable restore
#else
        public string SignedByEmail { get; set; }
#endif
        /// <summary>Gets or Sets SignedByName</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SignedByName { get; set; }
#nullable restore
#else
        public string SignedByName { get; set; }
#endif
        /// <summary>Gets or Sets SignedFromIp</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SignedFromIp { get; set; }
#nullable restore
#else
        public string SignedFromIp { get; set; }
#endif
        /// <summary>Gets or Sets SignedFromUserAgent</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SignedFromUserAgent { get; set; }
#nullable restore
#else
        public string SignedFromUserAgent { get; set; }
#endif
        /// <summary>Gets or Sets SignedIdentifier</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SignedIdentifier { get; set; }
#nullable restore
#else
        public string SignedIdentifier { get; set; }
#endif
        /// <summary>Gets or Sets SignedPlatform</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SignedPlatform { get; set; }
#nullable restore
#else
        public string SignedPlatform { get; set; }
#endif
        /// <summary>Gets or Sets SigningProvider</summary>
        public Body24_plus_SigningProviderEnum? SigningProvider { get; set; }
        /// <summary>Gets or Sets SignKey</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SignKey { get; set; }
#nullable restore
#else
        public string SignKey { get; set; }
#endif
        /// <summary>Gets or Sets TemplateContext</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Body24_templateContext? TemplateContext { get; set; }
#nullable restore
#else
        public Body24_templateContext TemplateContext { get; set; }
#endif
        /// <summary>Gets or Sets TemplateId</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TemplateId { get; set; }
#nullable restore
#else
        public string TemplateId { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static Body24 CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new Body24();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        public IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"expiresAt", n => { ExpiresAt = n.GetDateTimeOffsetValue(); } },
                {"isArchived", n => { IsArchived = n.GetBoolValue(); } },
                {"name", n => { Name = n.GetStringValue(); } },
                {"no", n => { No = n.GetStringValue(); } },
                {"rowrels", n => { Rowrels = n.GetCollectionOfObjectValues<InlineResponse2002Rowrels>(InlineResponse2002Rowrels.CreateFromDiscriminatorValue)?.ToList(); } },
                {"signantEndpoint", n => { SignantEndpoint = n.GetStringValue(); } },
                {"signantPostingAutoCreate", n => { SignantPostingAutoCreate = n.GetBoolValue(); } },
                {"signantPostingId", n => { SignantPostingId = n.GetStringValue(); } },
                {"signantResponseDump", n => { SignantResponseDump = n.GetObjectValue<Body24_signantResponseDump>(Body24_signantResponseDump.CreateFromDiscriminatorValue); } },
                {"signDocAttachments", n => { SignDocAttachments = n.GetCollectionOfObjectValues<InlineResponse20031SignDocAttachments>(InlineResponse20031SignDocAttachments.CreateFromDiscriminatorValue)?.ToList(); } },
                {"signDocDescription", n => { SignDocDescription = n.GetStringValue(); } },
                {"signDocRecipients", n => { SignDocRecipients = n.GetCollectionOfObjectValues<InlineResponse20031SignDocRecipients>(InlineResponse20031SignDocRecipients.CreateFromDiscriminatorValue)?.ToList(); } },
                {"signDocTitle", n => { SignDocTitle = n.GetStringValue(); } },
                {"signedAt", n => { SignedAt = n.GetDateTimeOffsetValue(); } },
                {"signedByEmail", n => { SignedByEmail = n.GetStringValue(); } },
                {"signedByName", n => { SignedByName = n.GetStringValue(); } },
                {"signedFromIp", n => { SignedFromIp = n.GetStringValue(); } },
                {"signedFromUserAgent", n => { SignedFromUserAgent = n.GetStringValue(); } },
                {"signedIdentifier", n => { SignedIdentifier = n.GetStringValue(); } },
                {"signedPlatform", n => { SignedPlatform = n.GetStringValue(); } },
                {"signingProvider", n => { SigningProvider = n.GetEnumValue<Body24_plus_SigningProviderEnum>(); } },
                {"signKey", n => { SignKey = n.GetStringValue(); } },
                {"templateContext", n => { TemplateContext = n.GetObjectValue<Body24_templateContext>(Body24_templateContext.CreateFromDiscriminatorValue); } },
                {"templateId", n => { TemplateId = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteDateTimeOffsetValue("expiresAt", ExpiresAt);
            writer.WriteBoolValue("isArchived", IsArchived);
            writer.WriteStringValue("name", Name);
            writer.WriteStringValue("no", No);
            writer.WriteCollectionOfObjectValues<InlineResponse2002Rowrels>("rowrels", Rowrels);
            writer.WriteStringValue("signantEndpoint", SignantEndpoint);
            writer.WriteBoolValue("signantPostingAutoCreate", SignantPostingAutoCreate);
            writer.WriteStringValue("signantPostingId", SignantPostingId);
            writer.WriteObjectValue<Body24_signantResponseDump>("signantResponseDump", SignantResponseDump);
            writer.WriteCollectionOfObjectValues<InlineResponse20031SignDocAttachments>("signDocAttachments", SignDocAttachments);
            writer.WriteStringValue("signDocDescription", SignDocDescription);
            writer.WriteCollectionOfObjectValues<InlineResponse20031SignDocRecipients>("signDocRecipients", SignDocRecipients);
            writer.WriteStringValue("signDocTitle", SignDocTitle);
            writer.WriteDateTimeOffsetValue("signedAt", SignedAt);
            writer.WriteStringValue("signedByEmail", SignedByEmail);
            writer.WriteStringValue("signedByName", SignedByName);
            writer.WriteStringValue("signedFromIp", SignedFromIp);
            writer.WriteStringValue("signedFromUserAgent", SignedFromUserAgent);
            writer.WriteStringValue("signedIdentifier", SignedIdentifier);
            writer.WriteStringValue("signedPlatform", SignedPlatform);
            writer.WriteEnumValue<Body24_plus_SigningProviderEnum>("signingProvider", SigningProvider);
            writer.WriteStringValue("signKey", SignKey);
            writer.WriteObjectValue<Body24_templateContext>("templateContext", TemplateContext);
            writer.WriteStringValue("templateId", TemplateId);
        }
    }
}
