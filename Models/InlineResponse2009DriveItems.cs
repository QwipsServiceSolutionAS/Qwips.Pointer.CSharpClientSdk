// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace Qwips.Core.Pointer.Models {
    public class InlineResponse2009DriveItems : IParsable {
        /// <summary>The azureItem property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public InlineResponse2009AzureItem? AzureItem { get; set; }
#nullable restore
#else
        public InlineResponse2009AzureItem AzureItem { get; set; }
#endif
        /// <summary>Gets or Sets CreatedAt</summary>
        public DateTimeOffset? CreatedAt { get; set; }
        /// <summary>Gets or Sets DriveId</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DriveId { get; set; }
#nullable restore
#else
        public string DriveId { get; set; }
#endif
        /// <summary>Gets or Sets FileCreatedAt</summary>
        public DateTimeOffset? FileCreatedAt { get; set; }
        /// <summary>Gets or Sets FileUpdatedAt</summary>
        public DateTimeOffset? FileUpdatedAt { get; set; }
        /// <summary>The _hashes property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public InlineResponse2004Hashes? Hashes { get; set; }
#nullable restore
#else
        public InlineResponse2004Hashes Hashes { get; set; }
#endif
        /// <summary>Gets or Sets Id</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>Gets or Sets IsArchived</summary>
        public bool? IsArchived { get; set; }
        /// <summary>Gets or Sets IsDeleted</summary>
        public bool? IsDeleted { get; set; }
        /// <summary>Gets or Sets IsFile</summary>
        public bool? IsFile { get; set; }
        /// <summary>Gets or Sets IsFolder</summary>
        public bool? IsFolder { get; set; }
        /// <summary>Gets or Sets ItemType</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ItemType { get; set; }
#nullable restore
#else
        public string ItemType { get; set; }
#endif
        /// <summary>Gets or Sets MimeType</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? MimeType { get; set; }
#nullable restore
#else
        public string MimeType { get; set; }
#endif
        /// <summary>Gets or Sets Name</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>Gets or Sets No</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? No { get; set; }
#nullable restore
#else
        public string No { get; set; }
#endif
        /// <summary>Gets or Sets RelativeParentPath</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? RelativeParentPath { get; set; }
#nullable restore
#else
        public string RelativeParentPath { get; set; }
#endif
        /// <summary>Gets or Sets RelativePath</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? RelativePath { get; set; }
#nullable restore
#else
        public string RelativePath { get; set; }
#endif
        /// <summary>Gets or Sets Rowrels</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<InlineResponse2002Rowrels>? Rowrels { get; set; }
#nullable restore
#else
        public List<InlineResponse2002Rowrels> Rowrels { get; set; }
#endif
        /// <summary>Gets or Sets Score</summary>
        public double? Score { get; set; }
        /// <summary>Gets or Sets SizeBytes</summary>
        public double? SizeBytes { get; set; }
        /// <summary>Gets or Sets TenantId</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TenantId { get; set; }
#nullable restore
#else
        public string TenantId { get; set; }
#endif
        /// <summary>Gets or Sets UpdatedAt</summary>
        public DateTimeOffset? UpdatedAt { get; set; }
        /// <summary>Gets or Sets UploadId</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UploadId { get; set; }
#nullable restore
#else
        public string UploadId { get; set; }
#endif
        /// <summary>Gets or Sets UploadOriginalName</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UploadOriginalName { get; set; }
#nullable restore
#else
        public string UploadOriginalName { get; set; }
#endif
        /// <summary>Gets or Sets UploadStatus</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UploadStatus { get; set; }
#nullable restore
#else
        public string UploadStatus { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static InlineResponse2009DriveItems CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new InlineResponse2009DriveItems();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        public IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"azureItem", n => { AzureItem = n.GetObjectValue<InlineResponse2009AzureItem>(InlineResponse2009AzureItem.CreateFromDiscriminatorValue); } },
                {"createdAt", n => { CreatedAt = n.GetDateTimeOffsetValue(); } },
                {"driveId", n => { DriveId = n.GetStringValue(); } },
                {"fileCreatedAt", n => { FileCreatedAt = n.GetDateTimeOffsetValue(); } },
                {"fileUpdatedAt", n => { FileUpdatedAt = n.GetDateTimeOffsetValue(); } },
                {"_hashes", n => { Hashes = n.GetObjectValue<InlineResponse2004Hashes>(InlineResponse2004Hashes.CreateFromDiscriminatorValue); } },
                {"id", n => { Id = n.GetStringValue(); } },
                {"isArchived", n => { IsArchived = n.GetBoolValue(); } },
                {"isDeleted", n => { IsDeleted = n.GetBoolValue(); } },
                {"isFile", n => { IsFile = n.GetBoolValue(); } },
                {"isFolder", n => { IsFolder = n.GetBoolValue(); } },
                {"itemType", n => { ItemType = n.GetStringValue(); } },
                {"mimeType", n => { MimeType = n.GetStringValue(); } },
                {"name", n => { Name = n.GetStringValue(); } },
                {"no", n => { No = n.GetStringValue(); } },
                {"relativeParentPath", n => { RelativeParentPath = n.GetStringValue(); } },
                {"relativePath", n => { RelativePath = n.GetStringValue(); } },
                {"rowrels", n => { Rowrels = n.GetCollectionOfObjectValues<InlineResponse2002Rowrels>(InlineResponse2002Rowrels.CreateFromDiscriminatorValue)?.ToList(); } },
                {"_score", n => { Score = n.GetDoubleValue(); } },
                {"sizeBytes", n => { SizeBytes = n.GetDoubleValue(); } },
                {"tenantId", n => { TenantId = n.GetStringValue(); } },
                {"updatedAt", n => { UpdatedAt = n.GetDateTimeOffsetValue(); } },
                {"uploadId", n => { UploadId = n.GetStringValue(); } },
                {"uploadOriginalName", n => { UploadOriginalName = n.GetStringValue(); } },
                {"uploadStatus", n => { UploadStatus = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<InlineResponse2009AzureItem>("azureItem", AzureItem);
            writer.WriteDateTimeOffsetValue("createdAt", CreatedAt);
            writer.WriteStringValue("driveId", DriveId);
            writer.WriteDateTimeOffsetValue("fileCreatedAt", FileCreatedAt);
            writer.WriteDateTimeOffsetValue("fileUpdatedAt", FileUpdatedAt);
            writer.WriteObjectValue<InlineResponse2004Hashes>("_hashes", Hashes);
            writer.WriteStringValue("id", Id);
            writer.WriteBoolValue("isArchived", IsArchived);
            writer.WriteBoolValue("isDeleted", IsDeleted);
            writer.WriteBoolValue("isFile", IsFile);
            writer.WriteBoolValue("isFolder", IsFolder);
            writer.WriteStringValue("itemType", ItemType);
            writer.WriteStringValue("mimeType", MimeType);
            writer.WriteStringValue("name", Name);
            writer.WriteStringValue("no", No);
            writer.WriteStringValue("relativeParentPath", RelativeParentPath);
            writer.WriteStringValue("relativePath", RelativePath);
            writer.WriteCollectionOfObjectValues<InlineResponse2002Rowrels>("rowrels", Rowrels);
            writer.WriteDoubleValue("_score", Score);
            writer.WriteDoubleValue("sizeBytes", SizeBytes);
            writer.WriteStringValue("tenantId", TenantId);
            writer.WriteDateTimeOffsetValue("updatedAt", UpdatedAt);
            writer.WriteStringValue("uploadId", UploadId);
            writer.WriteStringValue("uploadOriginalName", UploadOriginalName);
            writer.WriteStringValue("uploadStatus", UploadStatus);
        }
    }
}
