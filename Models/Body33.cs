// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace Qwips.Core.Pointer.Models {
    public class Body33 : IParsable {
        /// <summary>Gets or Sets AzureUserId</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AzureUserId { get; set; }
#nullable restore
#else
        public string AzureUserId { get; set; }
#endif
        /// <summary>Gets or Sets ContactPersonId</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ContactPersonId { get; set; }
#nullable restore
#else
        public string ContactPersonId { get; set; }
#endif
        /// <summary>Gets or Sets CustomerId</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CustomerId { get; set; }
#nullable restore
#else
        public string CustomerId { get; set; }
#endif
        /// <summary>Gets or Sets Description</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>Gets or Sets Email</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Email { get; set; }
#nullable restore
#else
        public string Email { get; set; }
#endif
        /// <summary>Gets or Sets EmployeeId</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? EmployeeId { get; set; }
#nullable restore
#else
        public string EmployeeId { get; set; }
#endif
        /// <summary>Gets or Sets IsArchived</summary>
        public bool? IsArchived { get; set; }
        /// <summary>Gets or Sets Mobile</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Mobile { get; set; }
#nullable restore
#else
        public string Mobile { get; set; }
#endif
        /// <summary>Gets or Sets Name</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>Gets or Sets No</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? No { get; set; }
#nullable restore
#else
        public string No { get; set; }
#endif
        /// <summary>Gets or Sets Rowrels</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<InlineResponse2002Rowrels>? Rowrels { get; set; }
#nullable restore
#else
        public List<InlineResponse2002Rowrels> Rowrels { get; set; }
#endif
        /// <summary>Gets or Sets TenantAccessLevel</summary>
        public Body33_plus_TenantAccessLevelEnum? TenantAccessLevel { get; set; }
        /// <summary>Gets or Sets UserEntityType</summary>
        public Body33_plus_UserEntityTypeEnum? UserEntityType { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static Body33 CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new Body33();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        public IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"azureUserId", n => { AzureUserId = n.GetStringValue(); } },
                {"contactPersonId", n => { ContactPersonId = n.GetStringValue(); } },
                {"customerId", n => { CustomerId = n.GetStringValue(); } },
                {"description", n => { Description = n.GetStringValue(); } },
                {"email", n => { Email = n.GetStringValue(); } },
                {"employeeId", n => { EmployeeId = n.GetStringValue(); } },
                {"isArchived", n => { IsArchived = n.GetBoolValue(); } },
                {"mobile", n => { Mobile = n.GetStringValue(); } },
                {"name", n => { Name = n.GetStringValue(); } },
                {"no", n => { No = n.GetStringValue(); } },
                {"rowrels", n => { Rowrels = n.GetCollectionOfObjectValues<InlineResponse2002Rowrels>(InlineResponse2002Rowrels.CreateFromDiscriminatorValue)?.ToList(); } },
                {"tenantAccessLevel", n => { TenantAccessLevel = n.GetEnumValue<Body33_plus_TenantAccessLevelEnum>(); } },
                {"userEntityType", n => { UserEntityType = n.GetEnumValue<Body33_plus_UserEntityTypeEnum>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("azureUserId", AzureUserId);
            writer.WriteStringValue("contactPersonId", ContactPersonId);
            writer.WriteStringValue("customerId", CustomerId);
            writer.WriteStringValue("description", Description);
            writer.WriteStringValue("email", Email);
            writer.WriteStringValue("employeeId", EmployeeId);
            writer.WriteBoolValue("isArchived", IsArchived);
            writer.WriteStringValue("mobile", Mobile);
            writer.WriteStringValue("name", Name);
            writer.WriteStringValue("no", No);
            writer.WriteCollectionOfObjectValues<InlineResponse2002Rowrels>("rowrels", Rowrels);
            writer.WriteEnumValue<Body33_plus_TenantAccessLevelEnum>("tenantAccessLevel", TenantAccessLevel);
            writer.WriteEnumValue<Body33_plus_UserEntityTypeEnum>("userEntityType", UserEntityType);
        }
    }
}
