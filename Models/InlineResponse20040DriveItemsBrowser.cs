// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace Qwips.Core.Pointer.Models {
    public class InlineResponse20040DriveItemsBrowser : IParsable {
        /// <summary>Gets or Sets ApiUrl</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ApiUrl { get; set; }
#nullable restore
#else
        public string ApiUrl { get; set; }
#endif
        /// <summary>Gets or Sets BrowserFullPath</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? BrowserFullPath { get; set; }
#nullable restore
#else
        public string BrowserFullPath { get; set; }
#endif
        /// <summary>Gets or Sets BrowserParentPath</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? BrowserParentPath { get; set; }
#nullable restore
#else
        public string BrowserParentPath { get; set; }
#endif
        /// <summary>Gets or Sets BrowserVirtualRoot</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? BrowserVirtualRoot { get; set; }
#nullable restore
#else
        public string BrowserVirtualRoot { get; set; }
#endif
        /// <summary>Gets or Sets BrowserVirtualRootReal</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? BrowserVirtualRootReal { get; set; }
#nullable restore
#else
        public string BrowserVirtualRootReal { get; set; }
#endif
        /// <summary>Gets or Sets ContentUrl</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ContentUrl { get; set; }
#nullable restore
#else
        public string ContentUrl { get; set; }
#endif
        /// <summary>Gets or Sets Id</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>Gets or Sets IsAvailable</summary>
        public bool? IsAvailable { get; set; }
        /// <summary>Gets or Sets IsFile</summary>
        public bool? IsFile { get; set; }
        /// <summary>Gets or Sets IsFolder</summary>
        public bool? IsFolder { get; set; }
        /// <summary>Gets or Sets MimeType</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? MimeType { get; set; }
#nullable restore
#else
        public string MimeType { get; set; }
#endif
        /// <summary>Gets or Sets Name</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>Gets or Sets RelativeParentPath</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? RelativeParentPath { get; set; }
#nullable restore
#else
        public string RelativeParentPath { get; set; }
#endif
        /// <summary>Gets or Sets RelativePath</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? RelativePath { get; set; }
#nullable restore
#else
        public string RelativePath { get; set; }
#endif
        /// <summary>Gets or Sets ShowInCustomerPortal</summary>
        public bool? ShowInCustomerPortal { get; set; }
        /// <summary>Gets or Sets ShowInServicePortal</summary>
        public bool? ShowInServicePortal { get; set; }
        /// <summary>Gets or Sets ShowInWebShop</summary>
        public bool? ShowInWebShop { get; set; }
        /// <summary>Gets or Sets TenantId</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TenantId { get; set; }
#nullable restore
#else
        public string TenantId { get; set; }
#endif
        /// <summary>Gets or Sets Thumbnails</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<InlineResponse20040Thumbnails>? Thumbnails { get; set; }
#nullable restore
#else
        public List<InlineResponse20040Thumbnails> Thumbnails { get; set; }
#endif
        /// <summary>Gets or Sets WebUrl</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? WebUrl { get; set; }
#nullable restore
#else
        public string WebUrl { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static InlineResponse20040DriveItemsBrowser CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new InlineResponse20040DriveItemsBrowser();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        public IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"apiUrl", n => { ApiUrl = n.GetStringValue(); } },
                {"browserFullPath", n => { BrowserFullPath = n.GetStringValue(); } },
                {"browserParentPath", n => { BrowserParentPath = n.GetStringValue(); } },
                {"browserVirtualRoot", n => { BrowserVirtualRoot = n.GetStringValue(); } },
                {"browserVirtualRootReal", n => { BrowserVirtualRootReal = n.GetStringValue(); } },
                {"contentUrl", n => { ContentUrl = n.GetStringValue(); } },
                {"id", n => { Id = n.GetStringValue(); } },
                {"isAvailable", n => { IsAvailable = n.GetBoolValue(); } },
                {"isFile", n => { IsFile = n.GetBoolValue(); } },
                {"isFolder", n => { IsFolder = n.GetBoolValue(); } },
                {"mimeType", n => { MimeType = n.GetStringValue(); } },
                {"name", n => { Name = n.GetStringValue(); } },
                {"relativeParentPath", n => { RelativeParentPath = n.GetStringValue(); } },
                {"relativePath", n => { RelativePath = n.GetStringValue(); } },
                {"showInCustomerPortal", n => { ShowInCustomerPortal = n.GetBoolValue(); } },
                {"showInServicePortal", n => { ShowInServicePortal = n.GetBoolValue(); } },
                {"showInWebShop", n => { ShowInWebShop = n.GetBoolValue(); } },
                {"tenantId", n => { TenantId = n.GetStringValue(); } },
                {"thumbnails", n => { Thumbnails = n.GetCollectionOfObjectValues<InlineResponse20040Thumbnails>(InlineResponse20040Thumbnails.CreateFromDiscriminatorValue)?.ToList(); } },
                {"webUrl", n => { WebUrl = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("apiUrl", ApiUrl);
            writer.WriteStringValue("browserFullPath", BrowserFullPath);
            writer.WriteStringValue("browserParentPath", BrowserParentPath);
            writer.WriteStringValue("browserVirtualRoot", BrowserVirtualRoot);
            writer.WriteStringValue("browserVirtualRootReal", BrowserVirtualRootReal);
            writer.WriteStringValue("contentUrl", ContentUrl);
            writer.WriteStringValue("id", Id);
            writer.WriteBoolValue("isAvailable", IsAvailable);
            writer.WriteBoolValue("isFile", IsFile);
            writer.WriteBoolValue("isFolder", IsFolder);
            writer.WriteStringValue("mimeType", MimeType);
            writer.WriteStringValue("name", Name);
            writer.WriteStringValue("relativeParentPath", RelativeParentPath);
            writer.WriteStringValue("relativePath", RelativePath);
            writer.WriteBoolValue("showInCustomerPortal", ShowInCustomerPortal);
            writer.WriteBoolValue("showInServicePortal", ShowInServicePortal);
            writer.WriteBoolValue("showInWebShop", ShowInWebShop);
            writer.WriteStringValue("tenantId", TenantId);
            writer.WriteCollectionOfObjectValues<InlineResponse20040Thumbnails>("thumbnails", Thumbnails);
            writer.WriteStringValue("webUrl", WebUrl);
        }
    }
}
