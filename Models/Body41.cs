// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace Qwips.Core.Pointer.Models {
    public class Body41 : IParsable {
        /// <summary>Gets or Sets AssignedToId</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AssignedToId { get; set; }
#nullable restore
#else
        public string AssignedToId { get; set; }
#endif
        /// <summary>Gets or Sets AzureResourceId</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AzureResourceId { get; set; }
#nullable restore
#else
        public string AzureResourceId { get; set; }
#endif
        /// <summary>Gets or Sets ChecklistItems</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<InlineResponse20034ChecklistItems>? ChecklistItems { get; set; }
#nullable restore
#else
        public List<InlineResponse20034ChecklistItems> ChecklistItems { get; set; }
#endif
        /// <summary>Gets or Sets Currency</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Currency { get; set; }
#nullable restore
#else
        public string Currency { get; set; }
#endif
        /// <summary>Gets or Sets CustomerContactId</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CustomerContactId { get; set; }
#nullable restore
#else
        public string CustomerContactId { get; set; }
#endif
        /// <summary>Gets or Sets CustomerId</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CustomerId { get; set; }
#nullable restore
#else
        public string CustomerId { get; set; }
#endif
        /// <summary>Gets or Sets DeadlineAt</summary>
        public DateTimeOffset? DeadlineAt { get; set; }
        /// <summary>The _hashes property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public InlineResponse2004Hashes? Hashes { get; set; }
#nullable restore
#else
        public InlineResponse2004Hashes Hashes { get; set; }
#endif
        /// <summary>Gets or Sets IsArchived</summary>
        public bool? IsArchived { get; set; }
        /// <summary>Gets or Sets LineItems</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<InlineResponse20016OrderLines>? LineItems { get; set; }
#nullable restore
#else
        public List<InlineResponse20016OrderLines> LineItems { get; set; }
#endif
        /// <summary>Gets or Sets Name</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>Gets or Sets No</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? No { get; set; }
#nullable restore
#else
        public string No { get; set; }
#endif
        /// <summary>Gets or Sets ParentProjectId</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ParentProjectId { get; set; }
#nullable restore
#else
        public string ParentProjectId { get; set; }
#endif
        /// <summary>Gets or Sets ParentSalesOrderId</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ParentSalesOrderId { get; set; }
#nullable restore
#else
        public string ParentSalesOrderId { get; set; }
#endif
        /// <summary>Gets or Sets ParentTaskId</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ParentTaskId { get; set; }
#nullable restore
#else
        public string ParentTaskId { get; set; }
#endif
        /// <summary>Gets or Sets PlannedEndAt</summary>
        public DateTimeOffset? PlannedEndAt { get; set; }
        /// <summary>Gets or Sets PlannedHours</summary>
        public double? PlannedHours { get; set; }
        /// <summary>Gets or Sets PlannedStartAt</summary>
        public DateTimeOffset? PlannedStartAt { get; set; }
        /// <summary>Gets or Sets PricingType</summary>
        public Body41_plus_PricingTypeEnum? PricingType { get; set; }
        /// <summary>Gets or Sets Priority</summary>
        public Body41_plus_PriorityEnum? Priority { get; set; }
        /// <summary>Gets or Sets SalesOptyId</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SalesOptyId { get; set; }
#nullable restore
#else
        public string SalesOptyId { get; set; }
#endif
        /// <summary>Gets or Sets ServiceCaseId</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ServiceCaseId { get; set; }
#nullable restore
#else
        public string ServiceCaseId { get; set; }
#endif
        /// <summary>Gets or Sets StatusPhase</summary>
        public Body41_plus_StatusPhaseEnum? StatusPhase { get; set; }
        /// <summary>Gets or Sets StatusProgress</summary>
        public Body41_plus_StatusProgressEnum? StatusProgress { get; set; }
        /// <summary>Gets or Sets TaskCollectionId</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TaskCollectionId { get; set; }
#nullable restore
#else
        public string TaskCollectionId { get; set; }
#endif
        /// <summary>Gets or Sets TypeCategory1</summary>
        public Body41_plus_TypeCategory1Enum? TypeCategory1 { get; set; }
        /// <summary>Gets or Sets UnsafeHtmlDescription</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UnsafeHtmlDescription { get; set; }
#nullable restore
#else
        public string UnsafeHtmlDescription { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static Body41 CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new Body41();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        public IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"assignedToId", n => { AssignedToId = n.GetStringValue(); } },
                {"azureResourceId", n => { AzureResourceId = n.GetStringValue(); } },
                {"checklistItems", n => { ChecklistItems = n.GetCollectionOfObjectValues<InlineResponse20034ChecklistItems>(InlineResponse20034ChecklistItems.CreateFromDiscriminatorValue)?.ToList(); } },
                {"currency", n => { Currency = n.GetStringValue(); } },
                {"customerContactId", n => { CustomerContactId = n.GetStringValue(); } },
                {"customerId", n => { CustomerId = n.GetStringValue(); } },
                {"deadlineAt", n => { DeadlineAt = n.GetDateTimeOffsetValue(); } },
                {"_hashes", n => { Hashes = n.GetObjectValue<InlineResponse2004Hashes>(InlineResponse2004Hashes.CreateFromDiscriminatorValue); } },
                {"isArchived", n => { IsArchived = n.GetBoolValue(); } },
                {"lineItems", n => { LineItems = n.GetCollectionOfObjectValues<InlineResponse20016OrderLines>(InlineResponse20016OrderLines.CreateFromDiscriminatorValue)?.ToList(); } },
                {"name", n => { Name = n.GetStringValue(); } },
                {"no", n => { No = n.GetStringValue(); } },
                {"parentProjectId", n => { ParentProjectId = n.GetStringValue(); } },
                {"parentSalesOrderId", n => { ParentSalesOrderId = n.GetStringValue(); } },
                {"parentTaskId", n => { ParentTaskId = n.GetStringValue(); } },
                {"plannedEndAt", n => { PlannedEndAt = n.GetDateTimeOffsetValue(); } },
                {"plannedHours", n => { PlannedHours = n.GetDoubleValue(); } },
                {"plannedStartAt", n => { PlannedStartAt = n.GetDateTimeOffsetValue(); } },
                {"pricingType", n => { PricingType = n.GetEnumValue<Body41_plus_PricingTypeEnum>(); } },
                {"priority", n => { Priority = n.GetEnumValue<Body41_plus_PriorityEnum>(); } },
                {"salesOptyId", n => { SalesOptyId = n.GetStringValue(); } },
                {"serviceCaseId", n => { ServiceCaseId = n.GetStringValue(); } },
                {"statusPhase", n => { StatusPhase = n.GetEnumValue<Body41_plus_StatusPhaseEnum>(); } },
                {"statusProgress", n => { StatusProgress = n.GetEnumValue<Body41_plus_StatusProgressEnum>(); } },
                {"taskCollectionId", n => { TaskCollectionId = n.GetStringValue(); } },
                {"typeCategory1", n => { TypeCategory1 = n.GetEnumValue<Body41_plus_TypeCategory1Enum>(); } },
                {"unsafeHtmlDescription", n => { UnsafeHtmlDescription = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("assignedToId", AssignedToId);
            writer.WriteStringValue("azureResourceId", AzureResourceId);
            writer.WriteCollectionOfObjectValues<InlineResponse20034ChecklistItems>("checklistItems", ChecklistItems);
            writer.WriteStringValue("currency", Currency);
            writer.WriteStringValue("customerContactId", CustomerContactId);
            writer.WriteStringValue("customerId", CustomerId);
            writer.WriteDateTimeOffsetValue("deadlineAt", DeadlineAt);
            writer.WriteObjectValue<InlineResponse2004Hashes>("_hashes", Hashes);
            writer.WriteBoolValue("isArchived", IsArchived);
            writer.WriteCollectionOfObjectValues<InlineResponse20016OrderLines>("lineItems", LineItems);
            writer.WriteStringValue("name", Name);
            writer.WriteStringValue("no", No);
            writer.WriteStringValue("parentProjectId", ParentProjectId);
            writer.WriteStringValue("parentSalesOrderId", ParentSalesOrderId);
            writer.WriteStringValue("parentTaskId", ParentTaskId);
            writer.WriteDateTimeOffsetValue("plannedEndAt", PlannedEndAt);
            writer.WriteDoubleValue("plannedHours", PlannedHours);
            writer.WriteDateTimeOffsetValue("plannedStartAt", PlannedStartAt);
            writer.WriteEnumValue<Body41_plus_PricingTypeEnum>("pricingType", PricingType);
            writer.WriteEnumValue<Body41_plus_PriorityEnum>("priority", Priority);
            writer.WriteStringValue("salesOptyId", SalesOptyId);
            writer.WriteStringValue("serviceCaseId", ServiceCaseId);
            writer.WriteEnumValue<Body41_plus_StatusPhaseEnum>("statusPhase", StatusPhase);
            writer.WriteEnumValue<Body41_plus_StatusProgressEnum>("statusProgress", StatusProgress);
            writer.WriteStringValue("taskCollectionId", TaskCollectionId);
            writer.WriteEnumValue<Body41_plus_TypeCategory1Enum>("typeCategory1", TypeCategory1);
            writer.WriteStringValue("unsafeHtmlDescription", UnsafeHtmlDescription);
        }
    }
}
