// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace Qwips.Core.Pointer.Models {
    public class Body133 : IParsable {
        /// <summary>Gets or Sets FileName</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FileName { get; set; }
#nullable restore
#else
        public string FileName { get; set; }
#endif
        /// <summary>Gets or Sets MergeItems</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Xrmpdfgenv1beta1tenantstenantIdgotenberghtml1MergeItems>? MergeItems { get; set; }
#nullable restore
#else
        public List<Xrmpdfgenv1beta1tenantstenantIdgotenberghtml1MergeItems> MergeItems { get; set; }
#endif
        /// <summary>The options property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Xrmpdfgenv1beta1tenantstenantIdgotenberghtml1Options? Options { get; set; }
#nullable restore
#else
        public Xrmpdfgenv1beta1tenantstenantIdgotenberghtml1Options Options { get; set; }
#endif
        /// <summary>Gets or Sets TemplateContext</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Body133_templateContext? TemplateContext { get; set; }
#nullable restore
#else
        public Body133_templateContext TemplateContext { get; set; }
#endif
        /// <summary>Gets or Sets TemplateParts</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Xrmpdfgenv1beta1tenantstenantIdgotenberghtml1TemplateParts>? TemplateParts { get; set; }
#nullable restore
#else
        public List<Xrmpdfgenv1beta1tenantstenantIdgotenberghtml1TemplateParts> TemplateParts { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static Body133 CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new Body133();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        public IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"fileName", n => { FileName = n.GetStringValue(); } },
                {"mergeItems", n => { MergeItems = n.GetCollectionOfObjectValues<Xrmpdfgenv1beta1tenantstenantIdgotenberghtml1MergeItems>(Xrmpdfgenv1beta1tenantstenantIdgotenberghtml1MergeItems.CreateFromDiscriminatorValue)?.ToList(); } },
                {"options", n => { Options = n.GetObjectValue<Xrmpdfgenv1beta1tenantstenantIdgotenberghtml1Options>(Xrmpdfgenv1beta1tenantstenantIdgotenberghtml1Options.CreateFromDiscriminatorValue); } },
                {"templateContext", n => { TemplateContext = n.GetObjectValue<Body133_templateContext>(Body133_templateContext.CreateFromDiscriminatorValue); } },
                {"templateParts", n => { TemplateParts = n.GetCollectionOfObjectValues<Xrmpdfgenv1beta1tenantstenantIdgotenberghtml1TemplateParts>(Xrmpdfgenv1beta1tenantstenantIdgotenberghtml1TemplateParts.CreateFromDiscriminatorValue)?.ToList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("fileName", FileName);
            writer.WriteCollectionOfObjectValues<Xrmpdfgenv1beta1tenantstenantIdgotenberghtml1MergeItems>("mergeItems", MergeItems);
            writer.WriteObjectValue<Xrmpdfgenv1beta1tenantstenantIdgotenberghtml1Options>("options", Options);
            writer.WriteObjectValue<Body133_templateContext>("templateContext", TemplateContext);
            writer.WriteCollectionOfObjectValues<Xrmpdfgenv1beta1tenantstenantIdgotenberghtml1TemplateParts>("templateParts", TemplateParts);
        }
    }
}
